{"version":3,"sources":["webpack:///./examples/docs/zh_CN/notice.md","webpack:///./examples/docs/zh_CN/notice.md?a142"],"names":["class","id","href","source","highlight","name","components","_createTextVNode","_resolveComponent","_withCtx","_createVNode","_openBlock","_createElementBlock","render","_ctx","_cache","_component_lku_button","onClick","$event","openNotice","default","_","getCurrentInstance","democomponentExport","setup","instance","$notice","appContext","config","globalProperties","type","duration","title","content","closeable","mounted","this","$nextTick","blocks","document","querySelectorAll","Array","prototype","forEach","call","highlightBlock","_Fragment","message1","message2","message3","success","_createBlock","message","html"],"mappings":"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","file":"js/chunk-2d0c7ed5.4fb3c9b8.js","sourcesContent":["\n    <template>\n      <section class=\"market-doc-container\">\n        <h2 id=\"noticezu-jian\"><a class=\"header-anchor\" href=\"#noticezu-jian\"></a> Notice组件</h2>\n<h3 id=\"ji-ben-shi-yong\"><a class=\"header-anchor\" href=\"#ji-ben-shi-yong\"></a> 基本使用</h3>\n<demo-block>\n        \n        <template #source><element-demo0 /></template>\n        <template #highlight><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;lku-button @click=&quot;openNotice('info')&quot;&gt;info类型通知&lt;/lku-button&gt;\n    &lt;lku-button @click=&quot;openNotice('error')&quot;&gt;error类型通知&lt;/lku-button&gt;\n    &lt;lku-button @click=&quot;openNotice('success')&quot;&gt;success类型通知&lt;/lku-button&gt;\n    &lt;lku-button @click=&quot;openNotice('warning')&quot;&gt;warning类型通知&lt;/lku-button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport {getCurrentInstance} from 'vue'\n\nexport default {\n  setup() {\n    const instance = getCurrentInstance();\n    const {$notice} = instance.appContext.config.globalProperties\n    const openNotice = (type) =&gt; {\n      $notice[type]({duration: 2000, title: `这是一条${type}消息，默认1.5s之后隐藏`, content:'这是notice组件的content内容',closeable: true});\n    }\n\n    return {openNotice}\n  }\n}\n&lt;/script&gt;\n\n</code></pre></template><h3 id=\"zi-ding-yi-xian-shi-shi-chang\"><a class=\"header-anchor\" href=\"#zi-ding-yi-xian-shi-shi-chang\"></a> 自定义显示时长</h3>\n<p>支持自定义显示时间，默认显示1.5s，支持其他时长或者永久显示</p>\n<demo-block>\n        \n        <template #source><element-demo1 /></template>\n        <template #highlight><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;lku-button @click=&quot;message1&quot;&gt;默认1.5s&lt;/lku-button&gt;\n  &lt;lku-button @click=&quot;message2&quot;&gt;设置显示时间为3s&lt;/lku-button&gt;\n  &lt;lku-button @click=&quot;message3&quot;&gt;不自动关闭，可以显示关闭按钮&lt;/lku-button&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport {getCurrentInstance} from 'vue';\n\nexport default {\n  setup() {\n    const instance = getCurrentInstance();\n    const {$notice} = instance.appContext.config.globalProperties;\n    const message1 = () =&gt; {\n      $notice.success('这是一条默认的1.5s提示')\n    };\n    const message2 = () =&gt; {\n      $notice.success({\n        title: '这是一条3s后关闭的提示',\n        duration: 3000\n      })\n    }\n    const message3 = () =&gt; {\n      $notice.success({\n        title: '这是一条不会自动关闭的提示',\n        duration: 0,\n        closeable: true\n      })\n    }\n    return {message1, message2, message3}\n  }\n}\n&lt;/script&gt;\n\n</code></pre></template></demo-block></demo-block><h3 id=\"xuan-ran-html\"><a class=\"header-anchor\" href=\"#xuan-ran-html\"></a> 渲染html</h3>\n<p>支持自定义显示时间，默认显示1.5s，支持其他时长或者永久显示</p>\n<p>::: mku-doc__warning\n动态渲染HTML容易导致XSS攻击。应确保render的值是安全可靠的，禁止将用户提交的内容赋值给该属性。\n:::</p>\n<demo-block>\n        \n        <template #source><element-demo2 /></template>\n        <template #highlight><pre v-pre><code class=\"html\">&lt;template&gt;\n  &lt;lku-button @click=&quot;message&quot;&gt;自定义html&lt;/lku-button&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport { getCurrentInstance } from 'vue'\n\nexport default {\n  setup() {\n    const instance = getCurrentInstance();\n    const {$notice} = instance.appContext.config.globalProperties;\n    const message = () =&gt; {\n      const html = `本次共提交&lt;i style=&quot;color: red;&quot;&gt; 666 &lt;/i&gt;条数据`\n      $notice.success({render: html})\n    }\n    return {message}\n  }\n}\n&lt;/script&gt;\n</code></pre></template></demo-block><h3 id=\"message-attributes\"><a class=\"header-anchor\" href=\"#message-attributes\"></a> Message Attributes</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">可选值</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">title</td>\n<td style=\"text-align:left\">提示的标题</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">content</td>\n<td style=\"text-align:left\">提示的内容</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">render</td>\n<td style=\"text-align:left\">以v-html方式渲染render的内容，设置该属性时自动忽略content内容</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">duration</td>\n<td style=\"text-align:left\">提示的时间</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">1500</td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">closeable</td>\n<td style=\"text-align:left\">是否显示关闭按钮</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">onShow</td>\n<td style=\"text-align:left\">显示的回调函数</td>\n<td style=\"text-align:left\">Function</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">否</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">onClose</td>\n<td style=\"text-align:left\">关闭的回调函数</td>\n<td style=\"text-align:left\">Function</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">否</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"message-shi-li-fang-fa\"><a class=\"header-anchor\" href=\"#message-shi-li-fang-fa\"></a> Message 实例方法</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法名</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">close</td>\n<td style=\"text-align:left\">关闭当前notice实例</td>\n<td style=\"text-align:left\">-</td>\n</tr>\n</tbody>\n</table>\n\n      </section>\n    </template>\n    <script>\n      import hljs from 'highlight.js'\n      import * as Vue from \"vue\"\n      export default {\n        name: 'component-doc',\n        components: {\n          \"element-demo0\": (function() {\n    \n    const { createTextVNode: _createTextVNode, resolveComponent: _resolveComponent, withCtx: _withCtx, createVNode: _createVNode, openBlock: _openBlock, createElementBlock: _createElementBlock } = Vue\n\nfunction render (_ctx, _cache) {\n  const _component_lku_button = _resolveComponent(\"lku-button\")\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createVNode(_component_lku_button, {\n      onClick: $event => (_ctx.openNotice('info'))\n    }, {\n      default: _withCtx(() => [\n        _createTextVNode(\"info类型通知\")\n      ]),\n      _: 1\n    }, 8, [\"onClick\"]),\n    _createVNode(_component_lku_button, {\n      onClick: $event => (_ctx.openNotice('error'))\n    }, {\n      default: _withCtx(() => [\n        _createTextVNode(\"error类型通知\")\n      ]),\n      _: 1\n    }, 8, [\"onClick\"]),\n    _createVNode(_component_lku_button, {\n      onClick: $event => (_ctx.openNotice('success'))\n    }, {\n      default: _withCtx(() => [\n        _createTextVNode(\"success类型通知\")\n      ]),\n      _: 1\n    }, 8, [\"onClick\"]),\n    _createVNode(_component_lku_button, {\n      onClick: $event => (_ctx.openNotice('warning'))\n    }, {\n      default: _withCtx(() => [\n        _createTextVNode(\"warning类型通知\")\n      ]),\n      _: 1\n    }, 8, [\"onClick\"])\n  ]))\n}\n  \n    \n        const {getCurrentInstance} = Vue\n        \n\nconst democomponentExport = {\n  setup() {\n    const instance = getCurrentInstance();\n    const {$notice} = instance.appContext.config.globalProperties\n    const openNotice = (type) => {\n      $notice[type]({duration: 2000, title: `这是一条${type}消息，默认1.5s之后隐藏`, content:'这是notice组件的content内容',closeable: true});\n    }\n\n    return {openNotice}\n  }\n}\n    return {\n      mounted(){\n        this.$nextTick(()=>{\n          const blocks = document.querySelectorAll('pre code:not(.hljs)')\n          Array.prototype.forEach.call(blocks, hljs.highlightBlock)\n        })\n      },\n      render,\n      ...democomponentExport\n    }\n  })(),\"element-demo1\": (function() {\n    \n    const { createTextVNode: _createTextVNode, resolveComponent: _resolveComponent, withCtx: _withCtx, createVNode: _createVNode, Fragment: _Fragment, openBlock: _openBlock, createElementBlock: _createElementBlock } = Vue\n\nfunction render (_ctx, _cache) {\n  const _component_lku_button = _resolveComponent(\"lku-button\")\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_lku_button, { onClick: _ctx.message1 }, {\n      default: _withCtx(() => [\n        _createTextVNode(\"默认1.5s\")\n      ]),\n      _: 1\n    }, 8, [\"onClick\"]),\n    _createVNode(_component_lku_button, { onClick: _ctx.message2 }, {\n      default: _withCtx(() => [\n        _createTextVNode(\"设置显示时间为3s\")\n      ]),\n      _: 1\n    }, 8, [\"onClick\"]),\n    _createVNode(_component_lku_button, { onClick: _ctx.message3 }, {\n      default: _withCtx(() => [\n        _createTextVNode(\"不自动关闭，可以显示关闭按钮\")\n      ]),\n      _: 1\n    }, 8, [\"onClick\"])\n  ], 64))\n}\n  \n    \n        const {getCurrentInstance} = Vue\n        ;\n\nconst democomponentExport = {\n  setup() {\n    const instance = getCurrentInstance();\n    const {$notice} = instance.appContext.config.globalProperties;\n    const message1 = () => {\n      $notice.success('这是一条默认的1.5s提示')\n    };\n    const message2 = () => {\n      $notice.success({\n        title: '这是一条3s后关闭的提示',\n        duration: 3000\n      })\n    }\n    const message3 = () => {\n      $notice.success({\n        title: '这是一条不会自动关闭的提示',\n        duration: 0,\n        closeable: true\n      })\n    }\n    return {message1, message2, message3}\n  }\n}\n    return {\n      mounted(){\n        this.$nextTick(()=>{\n          const blocks = document.querySelectorAll('pre code:not(.hljs)')\n          Array.prototype.forEach.call(blocks, hljs.highlightBlock)\n        })\n      },\n      render,\n      ...democomponentExport\n    }\n  })(),\"element-demo2\": (function() {\n    \n    const { createTextVNode: _createTextVNode, resolveComponent: _resolveComponent, withCtx: _withCtx, openBlock: _openBlock, createBlock: _createBlock } = Vue\n\nfunction render (_ctx, _cache) {\n  const _component_lku_button = _resolveComponent(\"lku-button\")\n\n  return (_openBlock(), _createBlock(_component_lku_button, { onClick: _ctx.message }, {\n    default: _withCtx(() => [\n      _createTextVNode(\"自定义html\")\n    ]),\n    _: 1\n  }, 8, [\"onClick\"]))\n}\n  \n    \n        const { getCurrentInstance } = Vue\n        \n\nconst democomponentExport = {\n  setup() {\n    const instance = getCurrentInstance();\n    const {$notice} = instance.appContext.config.globalProperties;\n    const message = () => {\n      const html = `本次共提交<i style=\"color: red;\"> 666 </i>条数据`\n      $notice.success({render: html})\n    }\n    return {message}\n  }\n}\n    return {\n      mounted(){\n        this.$nextTick(()=>{\n          const blocks = document.querySelectorAll('pre code:not(.hljs)')\n          Array.prototype.forEach.call(blocks, hljs.highlightBlock)\n        })\n      },\n      render,\n      ...democomponentExport\n    }\n  })(),\n        }\n      }\n    </script>\n  ","import { render } from \"./notice.md?vue&type=template&id=77bd349e\"\nimport script from \"./notice.md?vue&type=script&lang=js\"\nexport * from \"./notice.md?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}